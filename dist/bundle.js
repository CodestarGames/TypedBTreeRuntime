var TypedBTree =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/behaviourtree.ts":
/*!******************************!*\
  !*** ./src/behaviourtree.ts ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst guardPath_1 = __webpack_require__(/*! ./decorators/guards/guardPath */ \"./src/decorators/guards/guardPath.ts\");\r\nconst state_1 = __webpack_require__(/*! ./state */ \"./src/state.ts\");\r\nconst composite_1 = __importDefault(__webpack_require__(/*! ./nodes/composite */ \"./src/nodes/composite.ts\"));\r\nconst rootNodesBuilder_1 = __webpack_require__(/*! ./rootNodesBuilder */ \"./src/rootNodesBuilder.ts\");\r\nclass BehaviourTree {\r\n    constructor(definition, board) {\r\n        this._blackboard = board;\r\n        this._init(definition, board);\r\n    }\r\n    get rootNode() {\r\n        return this._rootNode;\r\n    }\r\n    _init(definition, board) {\r\n        if (typeof definition !== \"string\") {\r\n            throw new Error(\"the tree definition must be a string\");\r\n        }\r\n        if (typeof board !== 'object' || board === null) {\r\n            throw new Error(\"the blackboard must be defined\");\r\n        }\r\n        try {\r\n            this.rootASTNodes = new rootNodesBuilder_1.RootNodesBuilder().TraverseContent([JSON.parse(definition)]);\r\n            const mainRootNodeKey = Symbol(\"__root__\");\r\n            this.rootNodeMap = {};\r\n            for (const rootASTNode of this.rootASTNodes) {\r\n                this.rootNodeMap[rootASTNode.name === null ? mainRootNodeKey : rootASTNode.name] = rootASTNode;\r\n            }\r\n            const namedRootNodeProvider = (name) => this.rootNodeMap[name];\r\n            this._rootNode = this.rootNodeMap[mainRootNodeKey].createNodeInstance(namedRootNodeProvider, []);\r\n            this._applyLeafNodeGuardPaths();\r\n        }\r\n        catch (exception) {\r\n            throw new Error(`error parsing tree: ${exception}`);\r\n        }\r\n    }\r\n    ;\r\n    _parseTokensFromDefinition(definition) {\r\n        let cleansedDefinition = definition;\r\n        cleansedDefinition = cleansedDefinition.replace(/\\(/g, \" ( \");\r\n        cleansedDefinition = cleansedDefinition.replace(/\\)/g, \" ) \");\r\n        cleansedDefinition = cleansedDefinition.replace(/\\{/g, \" { \");\r\n        cleansedDefinition = cleansedDefinition.replace(/\\}/g, \" } \");\r\n        cleansedDefinition = cleansedDefinition.replace(/\\]/g, \" ] \");\r\n        cleansedDefinition = cleansedDefinition.replace(/\\[/g, \" [ \");\r\n        cleansedDefinition = cleansedDefinition.replace(/\\,/g, \" , \");\r\n        return cleansedDefinition.replace(/\\s+/g, \" \").trim().split(\" \");\r\n    }\r\n    ;\r\n    _applyLeafNodeGuardPaths() {\r\n        this._getAllNodePaths().forEach((path) => {\r\n            for (let depth = 0; depth < path.length; depth++) {\r\n                const currentNode = path[depth];\r\n                if (currentNode.hasGuardPath()) {\r\n                    continue;\r\n                }\r\n                const guardPath = new guardPath_1.GuardPath(path\r\n                    .slice(0, depth + 1)\r\n                    .map((node) => ({ node, guards: node.getGuardDecorators() }))\r\n                    .filter((details) => details.guards.length > 0));\r\n                currentNode.setGuardPath(guardPath);\r\n            }\r\n        });\r\n    }\r\n    ;\r\n    _getAllNodePaths() {\r\n        const nodePaths = new Array();\r\n        const findLeafNodes = (path, node) => {\r\n            path = path.concat(node);\r\n            if (node.isLeafNode()) {\r\n                nodePaths.push(path);\r\n            }\r\n            else {\r\n                node.getChildren().forEach((child) => findLeafNodes(path, child));\r\n            }\r\n        };\r\n        findLeafNodes([], this._rootNode);\r\n        return nodePaths;\r\n    }\r\n    ;\r\n    getRootNode() {\r\n        return this._rootNode;\r\n    }\r\n    ;\r\n    getFlattenedNodeDetails() {\r\n        const flattenedTreeNodes = new Array();\r\n        const processNode = (node, parentUid) => {\r\n            const getDecoratorDetails = (decorators) => decorators.length > 0 ? decorators.map((decorator) => decorator.getDetails()) : null;\r\n            flattenedTreeNodes.push({\r\n                id: node.getUid(),\r\n                type: node.getType(),\r\n                caption: node.getName(),\r\n                state: node.getState(),\r\n                decorators: getDecoratorDetails(node.getDecorators()),\r\n                parentId: parentUid\r\n            });\r\n            if (node instanceof composite_1.default) {\r\n                if (!node.isLeafNode()) {\r\n                    node.getChildren().forEach((child) => processNode(child, node.getUid()));\r\n                }\r\n            }\r\n        };\r\n        processNode(this._rootNode, null);\r\n        return flattenedTreeNodes;\r\n    }\r\n    ;\r\n    isRunning() {\r\n        return this._rootNode.getState() === state_1.State.RUNNING;\r\n    }\r\n    ;\r\n    getState() {\r\n        return this._rootNode.getState();\r\n    }\r\n    ;\r\n    step() {\r\n        if (this._rootNode.getState() === state_1.State.SUCCEEDED || this._rootNode.getState() === state_1.State.FAILED) {\r\n            this._rootNode.reset();\r\n        }\r\n        try {\r\n            this._rootNode.update(this._blackboard);\r\n        }\r\n        catch (exception) {\r\n            throw new Error(`error stepping tree: ${exception}`);\r\n        }\r\n    }\r\n    ;\r\n    reset() {\r\n        this._rootNode.reset();\r\n    }\r\n    ;\r\n}\r\nexports.default = BehaviourTree;\r\n\n\n//# sourceURL=webpack://TypedBTree/./src/behaviourtree.ts?");

/***/ }),

/***/ "./src/decorators/decorator.ts":
/*!*************************************!*\
  !*** ./src/decorators/decorator.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass Decorator {\r\n    constructor() {\r\n        this.getType = () => this.constructor.name;\r\n        this.isGuard = () => false;\r\n        this.getDetails = () => ({ type: this.getType() });\r\n    }\r\n}\r\nexports.default = Decorator;\r\n;\r\n\n\n//# sourceURL=webpack://TypedBTree/./src/decorators/decorator.ts?");

/***/ }),

/***/ "./src/decorators/entry.ts":
/*!*********************************!*\
  !*** ./src/decorators/entry.ts ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst decorator_1 = __importDefault(__webpack_require__(/*! ./decorator */ \"./src/decorators/decorator.ts\"));\r\nclass Entry extends decorator_1.default {\r\n    constructor(functionName, fnData) {\r\n        super();\r\n        this.getFunctionName = () => this.functionName;\r\n        this.getDetails = () => {\r\n            return {\r\n                type: this.getType(),\r\n                isGuard: this.isGuard(),\r\n                functionName: this.getFunctionName()\r\n            };\r\n        };\r\n        this.callBlackboardFunction = (board) => {\r\n            if (typeof board[this.functionName] === \"function\") {\r\n                board[this.functionName].call(board, board, this._fnData);\r\n            }\r\n            else {\r\n                throw `cannot call entry decorator function '${this.functionName}' is not defined in the blackboard`;\r\n            }\r\n        };\r\n        this.functionName = functionName;\r\n        this._fnData = fnData;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            \"$type\": \"$$.Hooks.Entry\",\r\n            \"action\": this.getFunctionName()\r\n        };\r\n    }\r\n}\r\nexports.default = Entry;\r\nEntry.schema = {\r\n    \"nodeType\": \"$$.Hooks.Entry\",\r\n    \"fields\": [\r\n        {\r\n            \"name\": \"action\",\r\n            \"valueType\": \"$$.Action\",\r\n            \"isArray\": false\r\n        }\r\n    ]\r\n};\r\n;\r\n\n\n//# sourceURL=webpack://TypedBTree/./src/decorators/entry.ts?");

/***/ }),

/***/ "./src/decorators/exit.ts":
/*!********************************!*\
  !*** ./src/decorators/exit.ts ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst decorator_1 = __importDefault(__webpack_require__(/*! ./decorator */ \"./src/decorators/decorator.ts\"));\r\nclass Exit extends decorator_1.default {\r\n    constructor(functionName, fnData) {\r\n        super();\r\n        this.getFunctionName = () => this.functionName;\r\n        this.getDetails = () => {\r\n            return {\r\n                type: this.getType(),\r\n                isGuard: this.isGuard(),\r\n                functionName: this.getFunctionName()\r\n            };\r\n        };\r\n        this.callBlackboardFunction = (board, isSuccess, isAborted) => {\r\n            if (typeof board[this.functionName] === \"function\") {\r\n                board[this.functionName].call(board, board, this._fnData, { succeeded: isSuccess, aborted: isAborted });\r\n            }\r\n            else {\r\n                throw `cannot call exit decorator function '${this.functionName}' is not defined in the blackboard`;\r\n            }\r\n        };\r\n        this.functionName = functionName;\r\n        this._fnData = fnData;\r\n    }\r\n}\r\nexports.default = Exit;\r\nExit.schema = {\r\n    \"nodeType\": \"$$.Hooks.Exit\",\r\n    \"fields\": [\r\n        {\r\n            \"name\": \"action\",\r\n            \"valueType\": \"$$.Action\",\r\n            \"isArray\": false\r\n        }\r\n    ]\r\n};\r\n;\r\n\n\n//# sourceURL=webpack://TypedBTree/./src/decorators/exit.ts?");

/***/ }),

/***/ "./src/decorators/guards/guardPath.ts":
/*!********************************************!*\
  !*** ./src/decorators/guards/guardPath.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.GuardPath = void 0;\r\nconst guardUnsatisifedException_1 = __importDefault(__webpack_require__(/*! ./guardUnsatisifedException */ \"./src/decorators/guards/guardUnsatisifedException.ts\"));\r\nclass GuardPath {\r\n    constructor(nodes) {\r\n        this.nodes = nodes;\r\n    }\r\n    evaluate(board) {\r\n        for (const details of this.nodes) {\r\n            for (const guard of details.guards) {\r\n                if (!guard.isSatisfied(board)) {\r\n                    throw new guardUnsatisifedException_1.default(details.node);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ;\r\n}\r\nexports.GuardPath = GuardPath;\r\n;\r\n\n\n//# sourceURL=webpack://TypedBTree/./src/decorators/guards/guardPath.ts?");

/***/ }),

/***/ "./src/decorators/guards/guardUnsatisifedException.ts":
/*!************************************************************!*\
  !*** ./src/decorators/guards/guardUnsatisifedException.ts ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass GuardUnsatisifedException extends Error {\r\n    constructor(source) {\r\n        super(GuardUnsatisifedException.message);\r\n        this.isSourceNode = (node) => node === this.source;\r\n        this.source = source;\r\n    }\r\n}\r\nexports.default = GuardUnsatisifedException;\r\nGuardUnsatisifedException.message = \"A guard path condition has failed\";\r\n\n\n//# sourceURL=webpack://TypedBTree/./src/decorators/guards/guardUnsatisifedException.ts?");

/***/ }),

/***/ "./src/decorators/guards/until.ts":
/*!****************************************!*\
  !*** ./src/decorators/guards/until.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst decorator_1 = __importDefault(__webpack_require__(/*! ../decorator */ \"./src/decorators/decorator.ts\"));\r\nclass Until extends decorator_1.default {\r\n    constructor(condition) {\r\n        super();\r\n        this.isGuard = () => true;\r\n        this.getCondition = () => this.condition;\r\n        this.getDetails = () => {\r\n            return {\r\n                type: this.getType(),\r\n                isGuard: this.isGuard(),\r\n                condition: this.getCondition()\r\n            };\r\n        };\r\n        this.isSatisfied = (board) => {\r\n            if (typeof board[(this.condition)] === \"function\") {\r\n                return !!!(board[this.condition].call(board, board));\r\n            }\r\n            else {\r\n                throw `cannot evaluate node guard as function '${this.condition}' is not defined in the blackboard`;\r\n            }\r\n        };\r\n        this.condition = condition;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            \"$type\": \"$$.Hooks.Until\",\r\n            \"$condition\": this.condition\r\n        };\r\n    }\r\n}\r\nexports.default = Until;\r\nUntil.schema = {\r\n    \"nodeType\": \"$$.Hooks.Until\",\r\n    \"fields\": [\r\n        {\r\n            \"name\": \"$condition\",\r\n            \"valueType\": \"$$.Cond\",\r\n            \"isArray\": false\r\n        }\r\n    ]\r\n};\r\n;\r\n\n\n//# sourceURL=webpack://TypedBTree/./src/decorators/guards/until.ts?");

/***/ }),

/***/ "./src/decorators/guards/while.ts":
/*!****************************************!*\
  !*** ./src/decorators/guards/while.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst decorator_1 = __importDefault(__webpack_require__(/*! ../decorator */ \"./src/decorators/decorator.ts\"));\r\nclass While extends decorator_1.default {\r\n    constructor(condition) {\r\n        super();\r\n        this.isGuard = () => true;\r\n        this.getCondition = () => this.condition;\r\n        this.getDetails = () => {\r\n            return {\r\n                type: this.getType(),\r\n                isGuard: this.isGuard(),\r\n                condition: this.getCondition()\r\n            };\r\n        };\r\n        this.isSatisfied = (board) => {\r\n            if (typeof board[this.condition] === \"function\") {\r\n                return !!(board[this.condition].call(board, board));\r\n            }\r\n            else {\r\n                throw `cannot evaluate node guard as function '${this.condition}' is not defined in the blackboard`;\r\n            }\r\n        };\r\n        this.condition = condition;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            \"$type\": \"$$.Hooks.While\",\r\n            \"$condition\": this.condition\r\n        };\r\n    }\r\n}\r\nexports.default = While;\r\nWhile.schema = {\r\n    \"nodeType\": \"$$.Hooks.While\",\r\n    \"fields\": [\r\n        {\r\n            \"name\": \"$condition\",\r\n            \"valueType\": \"$$.Cond\",\r\n            \"isArray\": false\r\n        }\r\n    ]\r\n};\r\n;\r\n\n\n//# sourceURL=webpack://TypedBTree/./src/decorators/guards/while.ts?");

/***/ }),

/***/ "./src/decorators/step.ts":
/*!********************************!*\
  !*** ./src/decorators/step.ts ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst decorator_1 = __importDefault(__webpack_require__(/*! ./decorator */ \"./src/decorators/decorator.ts\"));\r\nclass Step extends decorator_1.default {\r\n    constructor(functionName, fnData) {\r\n        super();\r\n        this.getFunctionName = () => this.functionName;\r\n        this.getDetails = () => {\r\n            return {\r\n                type: this.getType(),\r\n                isGuard: this.isGuard(),\r\n                functionName: this.getFunctionName()\r\n            };\r\n        };\r\n        this.callBlackboardFunction = (board) => {\r\n            if (typeof board[this.functionName] === \"function\") {\r\n                board[this.functionName].call(board, board, this._fnData);\r\n            }\r\n            else {\r\n                throw `cannot call entry decorator function '${this.functionName}' is not defined in the blackboard`;\r\n            }\r\n        };\r\n        this._fnData = fnData;\r\n        this.functionName = functionName;\r\n    }\r\n}\r\nexports.default = Step;\r\nStep.schema = {\r\n    \"nodeType\": \"$$.Hooks.Step\",\r\n    \"fields\": [\r\n        {\r\n            \"name\": \"action\",\r\n            \"valueType\": \"$$.Action\",\r\n            \"isArray\": false\r\n        }\r\n    ]\r\n};\r\n;\r\n\n\n//# sourceURL=webpack://TypedBTree/./src/decorators/step.ts?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.rootAlias = exports.baseItemAliases = exports.schemas = exports.State = exports.BehaviourTree = void 0;\r\nconst behaviourtree_1 = __importDefault(__webpack_require__(/*! ./behaviourtree */ \"./src/behaviourtree.ts\"));\r\nexports.BehaviourTree = behaviourtree_1.default;\r\nconst state_1 = __webpack_require__(/*! ./state */ \"./src/state.ts\");\r\nObject.defineProperty(exports, \"State\", { enumerable: true, get: function () { return state_1.State; } });\r\nconst schemas_1 = __webpack_require__(/*! ./schemas */ \"./src/schemas.ts\");\r\nObject.defineProperty(exports, \"schemas\", { enumerable: true, get: function () { return schemas_1.schemas; } });\r\nObject.defineProperty(exports, \"baseItemAliases\", { enumerable: true, get: function () { return schemas_1.baseItemAliases; } });\r\nObject.defineProperty(exports, \"rootAlias\", { enumerable: true, get: function () { return schemas_1.rootAlias; } });\r\nglobalThis.TypedBTree = { BehaviourTree: behaviourtree_1.default, State: state_1.State };\r\n\n\n//# sourceURL=webpack://TypedBTree/./src/index.ts?");

/***/ }),

/***/ "./src/nodes/action.ts":
/*!*****************************!*\
  !*** ./src/nodes/action.ts ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst leaf_1 = __importDefault(__webpack_require__(/*! ./leaf */ \"./src/nodes/leaf.ts\"));\r\nconst state_1 = __webpack_require__(/*! ../state */ \"./src/state.ts\");\r\nclass Action extends leaf_1.default {\r\n    constructor(decorators, actionName, actionProps) {\r\n        super(\"action\", decorators);\r\n        let isUsingUpdatePromise = false;\r\n        let updatePromiseStateResult = null;\r\n        this._actionName = actionName;\r\n        this._actionProps = actionProps;\r\n    }\r\n    toJSON() {\r\n        return Object.assign(Object.assign({ $type: this._actionName }, this._actionProps), { collapsed: this.collapsed, state: this.getStateAsString() });\r\n    }\r\n    ;\r\n    _validateUpdateResult(result) {\r\n        switch (result) {\r\n            case state_1.State.SUCCEEDED:\r\n            case state_1.State.FAILED:\r\n            case undefined:\r\n                return;\r\n            default:\r\n                throw `action '${this._actionName}' 'onUpdate' returned an invalid response, expected an optional State.SUCCEEDED or State.FAILED value to be returned`;\r\n        }\r\n    }\r\n    getName() {\r\n        return this._actionName;\r\n    }\r\n    _validateAction(action) {\r\n        if (!action) {\r\n            throw `cannot update action node as action '${this._actionName}' is not defined in the blackboard`;\r\n        }\r\n        if (typeof action !== \"function\") {\r\n            throw `action '${this._actionName}' must be a function`;\r\n        }\r\n    }\r\n    reset() {\r\n        this.setState(state_1.State.READY);\r\n        this.isUsingUpdatePromise = false;\r\n        this.updatePromiseStateResult = null;\r\n    }\r\n    onUpdate(board) {\r\n        this._ctx = board;\r\n        const action = board[this._actionName];\r\n        if (this.isUsingUpdatePromise) {\r\n            if (this.updatePromiseStateResult) {\r\n                this.setState(this.updatePromiseStateResult);\r\n            }\r\n            return;\r\n        }\r\n        this._validateAction(action);\r\n        let updateResult;\r\n        if (this._actionProps)\r\n            updateResult = action.call(board, this._ctx, this._actionProps);\r\n        else\r\n            updateResult = action.call(board, this._ctx);\r\n        if (updateResult instanceof Promise) {\r\n            updateResult.then((result) => {\r\n                if (!this.isUsingUpdatePromise) {\r\n                    return;\r\n                }\r\n                if (result.toString() !== state_1.State.SUCCEEDED.toString() && result.toString() !== state_1.State.FAILED.toString()) {\r\n                    throw \"action node promise resolved with an invalid value, expected a State.SUCCEEDED or State.FAILED value to be returned\";\r\n                }\r\n                this.updatePromiseStateResult = result;\r\n            }, (reason) => {\r\n                if (!this.isUsingUpdatePromise) {\r\n                    return;\r\n                }\r\n                throw reason;\r\n            });\r\n            this.setState(state_1.State.RUNNING);\r\n            this.isUsingUpdatePromise = true;\r\n        }\r\n        else {\r\n            this._validateUpdateResult(updateResult);\r\n            this.setState(updateResult || state_1.State.RUNNING);\r\n        }\r\n    }\r\n}\r\nexports.default = Action;\r\n;\r\n\n\n//# sourceURL=webpack://TypedBTree/./src/nodes/action.ts?");

/***/ }),

/***/ "./src/nodes/composite.ts":
/*!********************************!*\
  !*** ./src/nodes/composite.ts ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst node_1 = __importDefault(__webpack_require__(/*! ./node */ \"./src/nodes/node.ts\"));\r\nconst state_1 = __webpack_require__(/*! ../state */ \"./src/state.ts\");\r\nclass Composite extends node_1.default {\r\n    constructor(type, decorators, children) {\r\n        super(type, decorators);\r\n        this._children = children;\r\n    }\r\n    onUpdate(board) {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n    getChildren() {\r\n        return this._children;\r\n    }\r\n    abort(board) {\r\n        if (!this.is(state_1.State.RUNNING)) {\r\n            return;\r\n        }\r\n        this.getChildren().forEach((child) => child.abort(board));\r\n        this.reset();\r\n        const exitDecorator = this.getDecorator(\"exit\");\r\n        if (exitDecorator) {\r\n            exitDecorator.callBlackboardFunction(board, false, true);\r\n        }\r\n    }\r\n    reset() {\r\n        this.setState(state_1.State.READY);\r\n        this.getChildren().forEach(child => child.reset());\r\n    }\r\n    isLeafNode() {\r\n        return false;\r\n    }\r\n    getName() {\r\n    }\r\n}\r\nexports.default = Composite;\r\n;\r\n\n\n//# sourceURL=webpack://TypedBTree/./src/nodes/composite.ts?");

/***/ }),

/***/ "./src/nodes/condition.ts":
/*!********************************!*\
  !*** ./src/nodes/condition.ts ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst leaf_1 = __importDefault(__webpack_require__(/*! ./leaf */ \"./src/nodes/leaf.ts\"));\r\nconst state_1 = __webpack_require__(/*! ../state */ \"./src/state.ts\");\r\nclass Condition extends leaf_1.default {\r\n    constructor(decorators, condition) {\r\n        super(\"condition\", decorators);\r\n        this._condition = condition;\r\n    }\r\n    getName() {\r\n        return this._condition;\r\n    }\r\n    onUpdate(board) {\r\n        if (typeof board[this._condition] === \"function\") {\r\n            this.setState(!!(board[this._condition].call(board, board)) ? state_1.State.SUCCEEDED : state_1.State.FAILED);\r\n        }\r\n        else {\r\n            throw `cannot update condition node as function '${this._condition}' is not defined in the blackboard`;\r\n        }\r\n    }\r\n    toJSON() {\r\n        return {\r\n            $type: \"$$.Condition\",\r\n            collapsed: this.collapsed,\r\n            $condition: this._condition,\r\n            state: this.getStateAsString()\r\n        };\r\n    }\r\n}\r\nexports.default = Condition;\r\nCondition.schema = {\r\n    \"nodeType\": \"$$.Condition\",\r\n    \"comment\": \"Return SUCCESS if condition passes\",\r\n    \"fields\": [\r\n        {\r\n            \"name\": \"$condition\",\r\n            \"valueType\": \"$$.Cond\",\r\n            \"isArray\": false\r\n        }\r\n    ]\r\n};\r\n;\r\n\n\n//# sourceURL=webpack://TypedBTree/./src/nodes/condition.ts?");

/***/ }),

/***/ "./src/nodes/flip.ts":
/*!***************************!*\
  !*** ./src/nodes/flip.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst composite_1 = __importDefault(__webpack_require__(/*! ./composite */ \"./src/nodes/composite.ts\"));\r\nconst state_1 = __webpack_require__(/*! ../state */ \"./src/state.ts\");\r\nclass Flip extends composite_1.default {\r\n    constructor(decorators, child) {\r\n        super(\"flip\", decorators, [child]);\r\n        this._child = child;\r\n    }\r\n    getName() {\r\n        return \"FLIP\";\r\n    }\r\n    onUpdate(board) {\r\n        if (this._child.getState() === state_1.State.READY || this._child.getState() === state_1.State.RUNNING) {\r\n            this._child.update(board);\r\n        }\r\n        switch (this._child.getState()) {\r\n            case state_1.State.RUNNING:\r\n                this.setState(state_1.State.RUNNING);\r\n                break;\r\n            case state_1.State.SUCCEEDED:\r\n                this.setState(state_1.State.FAILED);\r\n                break;\r\n            case state_1.State.FAILED:\r\n                this.setState(state_1.State.SUCCEEDED);\r\n                break;\r\n            default:\r\n                this.setState(state_1.State.READY);\r\n        }\r\n    }\r\n    toJSON() {\r\n        return {\r\n            hooks: this.getDecorators(),\r\n            $type: \"$$.Flip\",\r\n            children: this._child,\r\n            collapsed: this.collapsed,\r\n            state: this.getStateAsString()\r\n        };\r\n    }\r\n}\r\nexports.default = Flip;\r\nFlip.schema = {\r\n    \"nodeType\": \"$$.Flip\",\r\n    \"comment\": \"\",\r\n    \"fields\": [\r\n        {\r\n            \"name\": \"hooks\",\r\n            \"valueType\": \"$$.Hook\",\r\n            \"isArray\": true\r\n        },\r\n        {\r\n            \"name\": \"children\",\r\n            \"valueType\": \"$$.Item\",\r\n            \"isArray\": false\r\n        }\r\n    ]\r\n};\r\n;\r\n\n\n//# sourceURL=webpack://TypedBTree/./src/nodes/flip.ts?");

/***/ }),

/***/ "./src/nodes/leaf.ts":
/*!***************************!*\
  !*** ./src/nodes/leaf.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst node_1 = __importDefault(__webpack_require__(/*! ./node */ \"./src/nodes/node.ts\"));\r\nclass Leaf extends node_1.default {\r\n    constructor(type, decorators) {\r\n        super(type, decorators);\r\n    }\r\n    isLeafNode() {\r\n        return true;\r\n    }\r\n    onUpdate(board) {\r\n    }\r\n}\r\nexports.default = Leaf;\r\n;\r\n\n\n//# sourceURL=webpack://TypedBTree/./src/nodes/leaf.ts?");

/***/ }),

/***/ "./src/nodes/lotto.ts":
/*!****************************!*\
  !*** ./src/nodes/lotto.ts ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst composite_1 = __importDefault(__webpack_require__(/*! ./composite */ \"./src/nodes/composite.ts\"));\r\nconst state_1 = __webpack_require__(/*! ../state */ \"./src/state.ts\");\r\nlet winningChild;\r\nclass Lotto extends composite_1.default {\r\n    constructor(decorators, tickets, children) {\r\n        super(\"lotto\", decorators, children);\r\n        this._tickets = tickets;\r\n        this._children = children;\r\n    }\r\n    getName() {\r\n        return this._tickets.length ? `LOTTO [${this._tickets.join(\",\")}]` : \"LOTTO\";\r\n    }\r\n    onUpdate(board) {\r\n        if (this.is(state_1.State.READY) || !winningChild) {\r\n            const lottoDraw = new LottoDraw();\r\n            this._children.forEach((child, index) => lottoDraw.add(child, this._tickets[index] || 1));\r\n            winningChild = lottoDraw.draw();\r\n        }\r\n        if (winningChild.getState() === state_1.State.READY || winningChild.getState() === state_1.State.RUNNING) {\r\n            winningChild.update(board);\r\n        }\r\n        this.setState(winningChild.getState());\r\n    }\r\n    toJSON() {\r\n        return {\r\n            hooks: this.getDecorators(),\r\n            $type: \"$$.Lotto\",\r\n            \"$data.tickets\": this._tickets,\r\n            children: this._children,\r\n            collapsed: this.collapsed,\r\n            state: this.getStateAsString()\r\n        };\r\n    }\r\n}\r\nexports.default = Lotto;\r\nLotto.schema = {\r\n    \"nodeType\": \"$$.Lotto\",\r\n    \"comment\": \"\",\r\n    \"fields\": [\r\n        {\r\n            \"name\": \"hooks\",\r\n            \"valueType\": \"$$.Hook\",\r\n            \"isArray\": true\r\n        },\r\n        {\r\n            \"name\": \"$data.tickets\",\r\n            \"valueType\": \"string\"\r\n        },\r\n        {\r\n            \"name\": \"children\",\r\n            \"valueType\": \"$$.Item\",\r\n            \"isArray\": true\r\n        }\r\n    ]\r\n};\r\n;\r\nclass LottoDraw {\r\n    constructor() {\r\n        this.participants = [];\r\n    }\r\n    add(participant, tickets) {\r\n        this.participants.push({ participant, tickets });\r\n        return this;\r\n    }\r\n    ;\r\n    draw() {\r\n        if (!this.participants.length) {\r\n            throw \"cannot draw a lotto winner when there are no participants\";\r\n        }\r\n        const pickable = [];\r\n        this.participants.forEach((item) => {\r\n            for (let ticketCount = 0; ticketCount < item.tickets; ticketCount++) {\r\n                pickable.push(item.participant);\r\n            }\r\n        });\r\n        return this.getRandomItem(pickable);\r\n    }\r\n    ;\r\n    getRandomItem(items) {\r\n        if (!items.length) {\r\n            return undefined;\r\n        }\r\n        return items[Math.floor(Math.random() * items.length)];\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://TypedBTree/./src/nodes/lotto.ts?");

/***/ }),

/***/ "./src/nodes/node.ts":
/*!***************************!*\
  !*** ./src/nodes/node.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.createNodeUid = void 0;\r\nconst guardUnsatisifedException_1 = __importDefault(__webpack_require__(/*! ../decorators/guards/guardUnsatisifedException */ \"./src/decorators/guards/guardUnsatisifedException.ts\"));\r\nconst state_1 = __webpack_require__(/*! ../state */ \"./src/state.ts\");\r\nclass Node {\r\n    constructor(type, decorators) {\r\n        this.uid = createNodeUid();\r\n        this.state = state_1.State.READY;\r\n        this.guardPath = null;\r\n        this._type = type;\r\n        this._decorators = decorators;\r\n    }\r\n    getDecorators() {\r\n        return this._decorators || [];\r\n    }\r\n    getDecorator(type) {\r\n        return this.getDecorators().filter((decorator) => decorator.getType().toUpperCase() === type.toUpperCase())[0] || null;\r\n    }\r\n    update(board) {\r\n        if (this.is(state_1.State.SUCCEEDED) || this.is(state_1.State.FAILED)) {\r\n            return;\r\n        }\r\n        try {\r\n            this.guardPath.evaluate(board);\r\n            if (this.is(state_1.State.READY)) {\r\n                const entryDecorator = this.getDecorator(\"entry\");\r\n                if (entryDecorator) {\r\n                    entryDecorator.callBlackboardFunction(board);\r\n                }\r\n            }\r\n            const stepDecorator = this.getDecorator(\"step\");\r\n            if (stepDecorator) {\r\n                stepDecorator.callBlackboardFunction(board);\r\n            }\r\n            this.onUpdate(board);\r\n            if (this.is(state_1.State.SUCCEEDED) || this.is(state_1.State.FAILED)) {\r\n                const exitDecorator = this.getDecorator(\"exit\");\r\n                if (exitDecorator) {\r\n                    exitDecorator.callBlackboardFunction(board, this.is(state_1.State.SUCCEEDED), false);\r\n                }\r\n            }\r\n        }\r\n        catch (error) {\r\n            if (error instanceof guardUnsatisifedException_1.default && error.isSourceNode(this)) {\r\n                this.abort(board);\r\n                this.setState(state_1.State.FAILED);\r\n            }\r\n            else {\r\n                throw error;\r\n            }\r\n        }\r\n    }\r\n    is(value) {\r\n        return this.state === value;\r\n    }\r\n    hasGuardPath() {\r\n        return !!this.guardPath;\r\n    }\r\n    getUid() {\r\n        return this.uid;\r\n    }\r\n    getState() {\r\n        switch (this.state.toString()) {\r\n            case 'Symbol(typedBTree.running)':\r\n                return state_1.State.RUNNING;\r\n            case 'Symbol(typedBTree.succeeded)':\r\n                return state_1.State.SUCCEEDED;\r\n            case 'Symbol(typedBTree.failed)':\r\n                return state_1.State.FAILED;\r\n            default:\r\n                return state_1.State.RUNNING;\r\n        }\r\n    }\r\n    getStateAsString() {\r\n        const convertNodeStateToString = (state) => {\r\n            switch (state) {\r\n                case state_1.State.RUNNING:\r\n                    return \"running\";\r\n                case state_1.State.SUCCEEDED:\r\n                    return \"succeeded\";\r\n                case state_1.State.FAILED:\r\n                    return \"failed\";\r\n                default:\r\n                    return \"ready\";\r\n            }\r\n        };\r\n        return convertNodeStateToString(this.state);\r\n    }\r\n    getType() {\r\n        return this._type;\r\n    }\r\n    abort(board) {\r\n        if (!this.is(state_1.State.RUNNING)) {\r\n            return;\r\n        }\r\n        this.reset();\r\n        const exitDecorator = this.getDecorator(\"exit\");\r\n        if (exitDecorator) {\r\n            exitDecorator.callBlackboardFunction(board, false, true);\r\n        }\r\n    }\r\n    setGuardPath(value) {\r\n        return this.guardPath = value;\r\n    }\r\n    setState(value) {\r\n        switch (value.toString()) {\r\n            case 'Symbol(typedBTree.running)':\r\n                return this.state = state_1.State.RUNNING;\r\n            case 'Symbol(typedBTree.succeeded)':\r\n                return this.state = state_1.State.SUCCEEDED;\r\n            case 'Symbol(typedBTree.failed)':\r\n                return this.state = state_1.State.FAILED;\r\n            default:\r\n                return this.state = state_1.State.RUNNING;\r\n        }\r\n    }\r\n    reset() {\r\n        this.setState(state_1.State.READY);\r\n    }\r\n    getGuardDecorators() {\r\n        return this.getDecorators().filter((decorator) => decorator.isGuard());\r\n    }\r\n}\r\nexports.default = Node;\r\n;\r\nfunction createNodeUid() {\r\n    var S4 = function () {\r\n        return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return (S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + S4() + S4());\r\n}\r\nexports.createNodeUid = createNodeUid;\r\n\n\n//# sourceURL=webpack://TypedBTree/./src/nodes/node.ts?");

/***/ }),

/***/ "./src/nodes/parallel.ts":
/*!*******************************!*\
  !*** ./src/nodes/parallel.ts ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst composite_1 = __importDefault(__webpack_require__(/*! ./composite */ \"./src/nodes/composite.ts\"));\r\nconst state_1 = __webpack_require__(/*! ../state */ \"./src/state.ts\");\r\nclass Parallel extends composite_1.default {\r\n    constructor(decorators, children) {\r\n        super(\"parallel\", decorators, children);\r\n        this._children = children;\r\n    }\r\n    getName() {\r\n        return \"PARALLEL\";\r\n    }\r\n    onUpdate(board) {\r\n        let succeededCount = 0;\r\n        let hasChildFailed = false;\r\n        for (const child of this._children) {\r\n            if (child.getState() === state_1.State.READY || child.getState() === state_1.State.RUNNING) {\r\n                child.update(board);\r\n            }\r\n            if (child.getState() === state_1.State.SUCCEEDED) {\r\n                succeededCount++;\r\n                continue;\r\n            }\r\n            if (child.getState() === state_1.State.FAILED) {\r\n                hasChildFailed = true;\r\n                break;\r\n            }\r\n            if (child.getState() !== state_1.State.RUNNING) {\r\n                throw \"Error: child node was not in an expected state.\";\r\n            }\r\n        }\r\n        if (hasChildFailed) {\r\n            this.setState(state_1.State.FAILED);\r\n            for (const child of this._children) {\r\n                if (child.getState() === state_1.State.RUNNING) {\r\n                    child.abort(board);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.setState(succeededCount === this._children.length ? state_1.State.SUCCEEDED : state_1.State.RUNNING);\r\n        }\r\n    }\r\n    toJSON() {\r\n        return {\r\n            hooks: this.getDecorators(),\r\n            $type: \"$$.Parallel\",\r\n            children: this._children,\r\n            collapsed: this.collapsed,\r\n            state: this.getStateAsString()\r\n        };\r\n    }\r\n}\r\nexports.default = Parallel;\r\nParallel.schema = {\r\n    \"nodeType\": \"$$.Parallel\",\r\n    \"comment\": \"\",\r\n    \"fields\": [\r\n        {\r\n            \"name\": \"hooks\",\r\n            \"valueType\": \"$$.Hook\",\r\n            \"isArray\": true\r\n        },\r\n        {\r\n            \"name\": \"children\",\r\n            \"valueType\": \"$$.Item\",\r\n            \"isArray\": true\r\n        }\r\n    ]\r\n};\r\n;\r\n\n\n//# sourceURL=webpack://TypedBTree/./src/nodes/parallel.ts?");

/***/ }),

/***/ "./src/nodes/repeat.ts":
/*!*****************************!*\
  !*** ./src/nodes/repeat.ts ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst composite_1 = __importDefault(__webpack_require__(/*! ./composite */ \"./src/nodes/composite.ts\"));\r\nconst state_1 = __webpack_require__(/*! ../state */ \"./src/state.ts\");\r\nclass Repeat extends composite_1.default {\r\n    constructor(decorators, iterations, maximumIterations, child) {\r\n        super(\"repeat\", decorators, [child]);\r\n        this.targetIterationCount = null;\r\n        this.currentIterationCount = 0;\r\n        this._iterations = iterations;\r\n        this._maximumIterations = maximumIterations;\r\n        this._child = child;\r\n    }\r\n    getName() {\r\n        if (this._iterations !== null) {\r\n            return `REPEAT ${this._maximumIterations ? this._iterations + \"x-\" + this._maximumIterations + \"x\" : this._iterations + \"x\"}`;\r\n        }\r\n        return \"REPEAT\";\r\n    }\r\n    reset() {\r\n        this.setState(state_1.State.READY);\r\n        this.currentIterationCount = 0;\r\n        this._child.reset();\r\n    }\r\n    _canIterate() {\r\n        if (this.targetIterationCount !== null) {\r\n            return this.currentIterationCount < this.targetIterationCount;\r\n        }\r\n        return true;\r\n    }\r\n    onUpdate(board) {\r\n        if (this.is(state_1.State.READY)) {\r\n            this._child.reset();\r\n            this._setTargetIterationCount();\r\n        }\r\n        if (this._canIterate()) {\r\n            this.setState(state_1.State.RUNNING);\r\n            if (this._child.getState() === state_1.State.SUCCEEDED) {\r\n                this._child.reset();\r\n            }\r\n            this._child.update(board);\r\n            if (this._child.getState() === state_1.State.FAILED) {\r\n                this.setState(state_1.State.FAILED);\r\n                return;\r\n            }\r\n            else if (this._child.getState() === state_1.State.SUCCEEDED) {\r\n                this.currentIterationCount += 1;\r\n            }\r\n        }\r\n        else {\r\n            this.setState(state_1.State.SUCCEEDED);\r\n        }\r\n    }\r\n    _setTargetIterationCount() {\r\n        if (typeof this._iterations === \"number\") {\r\n            this.targetIterationCount = (typeof this._maximumIterations === \"number\") ?\r\n                Math.floor(Math.random() * (this._maximumIterations - this._iterations + 1) + this._iterations) :\r\n                this._iterations;\r\n        }\r\n        else {\r\n            this.targetIterationCount = null;\r\n        }\r\n    }\r\n    toJSON() {\r\n        return {\r\n            hooks: this.getDecorators(),\r\n            $type: \"$$.Repeat\",\r\n            \"$data.times\": this._iterations,\r\n            children: this._child,\r\n            collapsed: this.collapsed,\r\n            state: this.getStateAsString()\r\n        };\r\n    }\r\n}\r\nexports.default = Repeat;\r\nRepeat.schema = {\r\n    \"nodeType\": \"$$.Repeat\",\r\n    \"comment\": \"Invoke X number of times\",\r\n    \"fields\": [\r\n        {\r\n            \"name\": \"hooks\",\r\n            \"valueType\": \"$$.Hook\",\r\n            \"isArray\": true\r\n        },\r\n        {\r\n            \"name\": \"$data.times\",\r\n            \"valueType\": \"number\"\r\n        },\r\n        {\r\n            \"name\": \"children\",\r\n            \"valueType\": \"$$.Item\",\r\n            \"isArray\": false\r\n        }\r\n    ]\r\n};\r\n;\r\n\n\n//# sourceURL=webpack://TypedBTree/./src/nodes/repeat.ts?");

/***/ }),

/***/ "./src/nodes/root.ts":
/*!***************************!*\
  !*** ./src/nodes/root.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst composite_1 = __importDefault(__webpack_require__(/*! ./composite */ \"./src/nodes/composite.ts\"));\r\nconst state_1 = __webpack_require__(/*! ../state */ \"./src/state.ts\");\r\nclass Root extends composite_1.default {\r\n    constructor(decorators, child) {\r\n        super(\"root\", decorators, [child]);\r\n        this._child = child;\r\n    }\r\n    getName() {\r\n        return \"ROOT\";\r\n    }\r\n    onUpdate(board) {\r\n        if (this._child.getState() === state_1.State.READY || this._child.getState() === state_1.State.RUNNING) {\r\n            this._child.update(board);\r\n        }\r\n        this.setState(this._child.getState());\r\n    }\r\n    toJSON() {\r\n        return {\r\n            $type: \"$$.Root\",\r\n            \"children\": this._child,\r\n            collapsed: this.collapsed,\r\n            state: this.getStateAsString()\r\n        };\r\n    }\r\n}\r\nexports.default = Root;\r\nRoot.schema = {\r\n    \"nodeType\": \"$$.Root\",\r\n    \"comment\": \"Invoke the tree\",\r\n    \"fields\": [\r\n        {\r\n            \"name\": \"children\",\r\n            \"valueType\": \"$$.Item\",\r\n            \"isArray\": false\r\n        },\r\n        {\r\n            \"name\": \"$data.treeName\",\r\n            \"valueType\": \"string\"\r\n        }\r\n    ]\r\n};\r\n;\r\n\n\n//# sourceURL=webpack://TypedBTree/./src/nodes/root.ts?");

/***/ }),

/***/ "./src/nodes/selector.ts":
/*!*******************************!*\
  !*** ./src/nodes/selector.ts ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst composite_1 = __importDefault(__webpack_require__(/*! ./composite */ \"./src/nodes/composite.ts\"));\r\nconst state_1 = __webpack_require__(/*! ../state */ \"./src/state.ts\");\r\nclass Selector extends composite_1.default {\r\n    constructor(decorators, children) {\r\n        super(\"selector\", decorators, children);\r\n        this._children = children;\r\n    }\r\n    getName() {\r\n        return \"SELECTOR\";\r\n    }\r\n    onUpdate(board) {\r\n        for (const child of this._children) {\r\n            if (child.getState() === state_1.State.READY || child.getState() === state_1.State.RUNNING) {\r\n                child.update(board);\r\n            }\r\n            if (child.getState() === state_1.State.SUCCEEDED) {\r\n                this.setState(state_1.State.SUCCEEDED);\r\n                return;\r\n            }\r\n            if (child.getState() === state_1.State.FAILED) {\r\n                if (this._children.indexOf(child) === this._children.length - 1) {\r\n                    this.setState(state_1.State.FAILED);\r\n                    return;\r\n                }\r\n                else {\r\n                    continue;\r\n                }\r\n            }\r\n            if (child.getState() === state_1.State.RUNNING) {\r\n                this.setState(state_1.State.RUNNING);\r\n                return;\r\n            }\r\n            throw \"Error: child node was not in an expected state.\";\r\n        }\r\n    }\r\n    toJSON() {\r\n        return {\r\n            hooks: this.getDecorators(),\r\n            $type: \"$$.Selector\",\r\n            children: this._children,\r\n            collapsed: this.collapsed,\r\n            state: this.getStateAsString()\r\n        };\r\n    }\r\n}\r\nexports.default = Selector;\r\nSelector.schema = {\r\n    \"nodeType\": \"$$.Selector\",\r\n    \"comment\": \"Invoke the first child that succeeds\",\r\n    \"fields\": [\r\n        {\r\n            \"name\": \"hooks\",\r\n            \"valueType\": \"$$.Hook\",\r\n            \"isArray\": true\r\n        },\r\n        {\r\n            \"name\": \"children\",\r\n            \"valueType\": \"$$.Item\",\r\n            \"isArray\": true\r\n        }\r\n    ]\r\n};\r\n;\r\n\n\n//# sourceURL=webpack://TypedBTree/./src/nodes/selector.ts?");

/***/ }),

/***/ "./src/nodes/sequence.ts":
/*!*******************************!*\
  !*** ./src/nodes/sequence.ts ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst composite_1 = __importDefault(__webpack_require__(/*! ./composite */ \"./src/nodes/composite.ts\"));\r\nconst state_1 = __webpack_require__(/*! ../state */ \"./src/state.ts\");\r\nclass Sequence extends composite_1.default {\r\n    constructor(decorators, children) {\r\n        super(\"sequence\", decorators, children);\r\n        this._children = children;\r\n    }\r\n    getName() {\r\n        return \"SEQUENCE\";\r\n    }\r\n    onUpdate(board) {\r\n        for (const child of this._children) {\r\n            if (child.getState() === state_1.State.READY || child.getState() === state_1.State.RUNNING) {\r\n                child.update(board);\r\n            }\r\n            if (child.getState() === state_1.State.SUCCEEDED) {\r\n                if (this._children.indexOf(child) === this._children.length - 1) {\r\n                    this.setState(state_1.State.SUCCEEDED);\r\n                    return;\r\n                }\r\n                else {\r\n                    continue;\r\n                }\r\n            }\r\n            if (child.getState() === state_1.State.FAILED) {\r\n                this.setState(state_1.State.FAILED);\r\n                return;\r\n            }\r\n            if (child.getState() === state_1.State.RUNNING) {\r\n                this.setState(state_1.State.RUNNING);\r\n                return;\r\n            }\r\n            throw \"Error: child node was not in an expected state.\";\r\n        }\r\n    }\r\n    toJSON() {\r\n        return {\r\n            hooks: this.getDecorators(),\r\n            $type: \"$$.Sequence\",\r\n            children: this._children,\r\n            collapsed: this.collapsed,\r\n            state: this.getStateAsString()\r\n        };\r\n    }\r\n}\r\nexports.default = Sequence;\r\nSequence.schema = {\r\n    \"nodeType\": \"$$.Sequence\",\r\n    \"comment\": \"Invoke all children in Sequence (the first one that fails stops the chain)\",\r\n    \"fields\": [\r\n        {\r\n            \"name\": \"hooks\",\r\n            \"valueType\": \"$$.Hook\",\r\n            \"isArray\": true\r\n        },\r\n        {\r\n            \"name\": \"children\",\r\n            \"valueType\": \"$$.Item\",\r\n            \"isArray\": true\r\n        }\r\n    ]\r\n};\r\n;\r\n\n\n//# sourceURL=webpack://TypedBTree/./src/nodes/sequence.ts?");

/***/ }),

/***/ "./src/nodes/wait.ts":
/*!***************************!*\
  !*** ./src/nodes/wait.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst leaf_1 = __importDefault(__webpack_require__(/*! ./leaf */ \"./src/nodes/leaf.ts\"));\r\nconst state_1 = __webpack_require__(/*! ../state */ \"./src/state.ts\");\r\nlet initialUpdateTime;\r\nlet waitDuration;\r\nclass Wait extends leaf_1.default {\r\n    constructor(decorators, duration, longestDuration) {\r\n        super(\"wait\", decorators);\r\n        this._duration = duration;\r\n        this._longestDuration = longestDuration;\r\n    }\r\n    getName() {\r\n        return `WAIT ${this._longestDuration ? this._duration + \"ms-\" + this._longestDuration + \"ms\" : this._duration + \"ms\"}`;\r\n    }\r\n    onUpdate(board) {\r\n        console.log(this.getState());\r\n        if (this.is(state_1.State.READY) || initialUpdateTime === null) {\r\n            initialUpdateTime = new Date().getTime();\r\n            this.setState(state_1.State.RUNNING);\r\n        }\r\n        if (new Date().getTime() >= (initialUpdateTime + this._duration)) {\r\n            this.setState(state_1.State.SUCCEEDED);\r\n            initialUpdateTime = null;\r\n        }\r\n    }\r\n    toJSON() {\r\n        return {\r\n            hooks: this.getDecorators(),\r\n            $type: \"$$.Wait\",\r\n            \"$data.duration\": this._duration,\r\n            collapsed: this.collapsed,\r\n            state: this.getStateAsString()\r\n        };\r\n    }\r\n}\r\nexports.default = Wait;\r\nWait.schema = {\r\n    \"nodeType\": \"$$.Wait\",\r\n    \"comment\": \"\",\r\n    \"fields\": [\r\n        {\r\n            \"name\": \"hooks\",\r\n            \"valueType\": \"$$.Hook\",\r\n            \"isArray\": true\r\n        },\r\n        {\r\n            \"name\": \"$data.duration\",\r\n            \"valueType\": \"number\"\r\n        }\r\n    ]\r\n};\r\n;\r\n\n\n//# sourceURL=webpack://TypedBTree/./src/nodes/wait.ts?");

/***/ }),

/***/ "./src/rootASTNodesBuilder.ts":
/*!************************************!*\
  !*** ./src/rootASTNodesBuilder.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ASTNodeFactories = exports.DecoratorFactories = void 0;\r\nconst action_1 = __importDefault(__webpack_require__(/*! ./nodes/action */ \"./src/nodes/action.ts\"));\r\nconst condition_1 = __importDefault(__webpack_require__(/*! ./nodes/condition */ \"./src/nodes/condition.ts\"));\r\nconst flip_1 = __importDefault(__webpack_require__(/*! ./nodes/flip */ \"./src/nodes/flip.ts\"));\r\nconst lotto_1 = __importDefault(__webpack_require__(/*! ./nodes/lotto */ \"./src/nodes/lotto.ts\"));\r\nconst repeat_1 = __importDefault(__webpack_require__(/*! ./nodes/repeat */ \"./src/nodes/repeat.ts\"));\r\nconst root_1 = __importDefault(__webpack_require__(/*! ./nodes/root */ \"./src/nodes/root.ts\"));\r\nconst selector_1 = __importDefault(__webpack_require__(/*! ./nodes/selector */ \"./src/nodes/selector.ts\"));\r\nconst sequence_1 = __importDefault(__webpack_require__(/*! ./nodes/sequence */ \"./src/nodes/sequence.ts\"));\r\nconst parallel_1 = __importDefault(__webpack_require__(/*! ./nodes/parallel */ \"./src/nodes/parallel.ts\"));\r\nconst wait_1 = __importDefault(__webpack_require__(/*! ./nodes/wait */ \"./src/nodes/wait.ts\"));\r\nconst while_1 = __importDefault(__webpack_require__(/*! ./decorators/guards/while */ \"./src/decorators/guards/while.ts\"));\r\nconst until_1 = __importDefault(__webpack_require__(/*! ./decorators/guards/until */ \"./src/decorators/guards/until.ts\"));\r\nconst entry_1 = __importDefault(__webpack_require__(/*! ./decorators/entry */ \"./src/decorators/entry.ts\"));\r\nconst exit_1 = __importDefault(__webpack_require__(/*! ./decorators/exit */ \"./src/decorators/exit.ts\"));\r\nconst step_1 = __importDefault(__webpack_require__(/*! ./decorators/step */ \"./src/decorators/step.ts\"));\r\nexports.DecoratorFactories = {\r\n    \"WHILE\": (condition) => new while_1.default(condition),\r\n    \"UNTIL\": (condition) => new until_1.default(condition),\r\n    \"ENTRY\": (functionName, fnData) => new entry_1.default(functionName, fnData),\r\n    \"EXIT\": (functionName, fnData) => new exit_1.default(functionName, fnData),\r\n    \"STEP\": (functionName, fnData) => new step_1.default(functionName, fnData)\r\n};\r\nexports.ASTNodeFactories = {\r\n    \"ROOT\": () => ({\r\n        type: \"root\",\r\n        collapsed: true,\r\n        decorators: [],\r\n        name: null,\r\n        children: [],\r\n        validate: function (depth) {\r\n            if (depth > 1) {\r\n                throw \"a root node cannot be the child of another node\";\r\n            }\r\n            if (this.children.length !== 1) {\r\n                throw \"a root node must have a single child\";\r\n            }\r\n        },\r\n        createNodeInstance: function (namedRootNodeProvider, visitedBranches) {\r\n            return new root_1.default(this.decorators, this.children[0].createNodeInstance(namedRootNodeProvider, visitedBranches.slice()));\r\n        }\r\n    }),\r\n    \"BRANCH\": () => ({\r\n        type: \"branch\",\r\n        collapsed: true,\r\n        props: {\r\n            branchName: \"\"\r\n        },\r\n        validate: function (depth) { },\r\n        createNodeInstance: function (namedRootNodeProvider, visitedBranches) {\r\n            var _a, _b, _c, _d, _e;\r\n            const targetRootNode = namedRootNodeProvider((_a = this.props) === null || _a === void 0 ? void 0 : _a.branchName);\r\n            if (visitedBranches.indexOf((_b = this.props) === null || _b === void 0 ? void 0 : _b.branchName) !== -1) {\r\n                throw `circular dependency found in branch node references for branch '${(_c = this.props) === null || _c === void 0 ? void 0 : _c.branchName}'`;\r\n            }\r\n            if (targetRootNode) {\r\n                return targetRootNode.createNodeInstance(namedRootNodeProvider, visitedBranches.concat((_d = this.props) === null || _d === void 0 ? void 0 : _d.branchName)).getChildren()[0];\r\n            }\r\n            else {\r\n                throw `branch references root node '${(_e = this.props) === null || _e === void 0 ? void 0 : _e.branchName}' which has not been defined`;\r\n                return null;\r\n            }\r\n        }\r\n    }),\r\n    \"SELECTOR\": () => ({\r\n        type: \"selector\",\r\n        collapsed: true,\r\n        decorators: [],\r\n        children: [],\r\n        validate: function (depth) {\r\n            if (this.children.length < 1) {\r\n                throw \"a selector node must have at least a single child\";\r\n            }\r\n        },\r\n        createNodeInstance: function (namedRootNodeProvider, visitedBranches) {\r\n            return Object.assign(new selector_1.default(this.decorators, this.children.map((child) => child.createNodeInstance(namedRootNodeProvider, visitedBranches.slice()))), { collapsed: this.collapsed });\r\n        }\r\n    }),\r\n    \"SEQUENCE\": () => ({\r\n        type: \"sequence\",\r\n        collapsed: true,\r\n        decorators: [],\r\n        children: [],\r\n        validate: function (depth) {\r\n            if (this.children.length < 1) {\r\n                throw \"a Sequence node must have at least a single child\";\r\n            }\r\n        },\r\n        createNodeInstance: function (namedRootNodeProvider, visitedBranches) {\r\n            return Object.assign(new sequence_1.default(this.decorators, this.children.map((child) => child.createNodeInstance(namedRootNodeProvider, visitedBranches.slice()))), { collapsed: this.collapsed });\r\n        }\r\n    }),\r\n    \"PARALLEL\": () => ({\r\n        type: \"parallel\",\r\n        collapsed: true,\r\n        decorators: [],\r\n        children: [],\r\n        validate: function (depth) {\r\n            if (this.children.length < 1) {\r\n                throw \"a parallel node must have at least a single child\";\r\n            }\r\n        },\r\n        createNodeInstance: function (namedRootNodeProvider, visitedBranches) {\r\n            return Object.assign(new parallel_1.default(this.decorators, this.children.map((child) => child.createNodeInstance(namedRootNodeProvider, visitedBranches.slice()))), { collapsed: this.collapsed });\r\n        }\r\n    }),\r\n    \"LOTTO\": () => ({\r\n        type: \"lotto\",\r\n        collapsed: true,\r\n        decorators: [],\r\n        children: [],\r\n        props: {\r\n            tickets: []\r\n        },\r\n        validate: function (depth) {\r\n            if (this.children.length < 1) {\r\n                throw \"a lotto node must have at least a single child\";\r\n            }\r\n        },\r\n        createNodeInstance: function (namedRootNodeProvider, visitedBranches) {\r\n            var _a;\r\n            return Object.assign(new lotto_1.default(this.decorators, (_a = this.props) === null || _a === void 0 ? void 0 : _a.tickets, this.children.map((child) => child.createNodeInstance(namedRootNodeProvider, visitedBranches.slice()))), { collapsed: this.collapsed });\r\n        }\r\n    }),\r\n    \"REPEAT\": () => ({\r\n        type: \"repeat\",\r\n        collapsed: true,\r\n        decorators: [],\r\n        iterations: null,\r\n        maximumIterations: null,\r\n        children: [],\r\n        validate: function (depth) {\r\n            if (this.children.length !== 1) {\r\n                throw \"a Repeat node must have a single child\";\r\n            }\r\n            if (this.iterations !== null && this.iterations < 0) {\r\n                this.iterations = null;\r\n            }\r\n            if (this.maximumIterations !== null) {\r\n                if (this.maximumIterations < 0) {\r\n                    throw \"a Repeat node must have a positive maximum iterations count if defined\";\r\n                }\r\n                if (this.iterations > this.maximumIterations) {\r\n                    throw \"a Repeat node must not have an iteration count that exceeds the maximum iteration count\";\r\n                }\r\n            }\r\n        },\r\n        createNodeInstance: function (namedRootNodeProvider, visitedBranches) {\r\n            return Object.assign(new repeat_1.default(this.decorators, this.iterations, this.maximumIterations, this.children[0].createNodeInstance(namedRootNodeProvider, visitedBranches.slice())), { collapsed: this.collapsed });\r\n        }\r\n    }),\r\n    \"FLIP\": () => ({\r\n        type: \"flip\",\r\n        collapsed: true,\r\n        decorators: [],\r\n        children: [],\r\n        validate: function (depth) {\r\n            if (this.children.length !== 1) {\r\n                throw \"a flip node must have a single child\";\r\n            }\r\n        },\r\n        createNodeInstance: function (namedRootNodeProvider, visitedBranches) {\r\n            return new flip_1.default(this.decorators, this.children[0].createNodeInstance(namedRootNodeProvider, visitedBranches.slice()));\r\n        }\r\n    }),\r\n    \"CONDITION\": () => ({\r\n        type: \"condition\",\r\n        collapsed: true,\r\n        decorators: [],\r\n        conditionFunction: \"\",\r\n        validate: function (depth) { },\r\n        createNodeInstance: function (namedRootNodeProvider, visitedBranches) {\r\n            return Object.assign(new condition_1.default(this.decorators, this.conditionFunction), { collapsed: this.collapsed });\r\n        }\r\n    }),\r\n    \"WAIT\": () => ({\r\n        type: \"wait\",\r\n        collapsed: true,\r\n        decorators: [],\r\n        duration: null,\r\n        longestDuration: null,\r\n        validate: function (depth) {\r\n            if (this.duration < 0) {\r\n                throw \"a Wait node must have a positive duration\";\r\n            }\r\n            if (this.longestDuration) {\r\n                if (this.longestDuration < 0) {\r\n                    throw \"a Wait node must have a positive longest duration if one is defined\";\r\n                }\r\n                if (this.duration > this.longestDuration) {\r\n                    throw \"a Wait node must not have a shortest duration that exceeds the longest duration\";\r\n                }\r\n            }\r\n        },\r\n        createNodeInstance: function (namedRootNodeProvider, visitedBranches) {\r\n            return Object.assign(new wait_1.default(this.decorators, this.duration, this.longestDuration), { collapsed: this.collapsed });\r\n        }\r\n    }),\r\n    \"ACTION\": () => ({\r\n        type: \"action\",\r\n        collapsed: true,\r\n        decorators: [],\r\n        actionName: \"\",\r\n        props: {},\r\n        validate: function (depth) { },\r\n        createNodeInstance: function (namedRootNodeProvider, visitedBranches) {\r\n            return Object.assign(new action_1.default(this.decorators, this.actionName, this.props), { collapsed: this.collapsed });\r\n        }\r\n    })\r\n};\r\n\n\n//# sourceURL=webpack://TypedBTree/./src/rootASTNodesBuilder.ts?");

/***/ }),

/***/ "./src/rootNodesBuilder.ts":
/*!*********************************!*\
  !*** ./src/rootNodesBuilder.ts ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RootNodesBuilder = void 0;\r\nconst rootASTNodesBuilder_1 = __webpack_require__(/*! ./rootASTNodesBuilder */ \"./src/rootASTNodesBuilder.ts\");\r\nclass RootNodesBuilder {\r\n    constructor() {\r\n        this.stack = [[]];\r\n    }\r\n    TraverseContent(contentItem) {\r\n        contentItem.forEach((item, index, array) => {\r\n            let node;\r\n            node.collapsed = item['collapsed'] || true;\r\n            if (item['$type'] === \"$$.Root\") {\r\n                node = rootASTNodesBuilder_1.ASTNodeFactories.ROOT();\r\n                this.stack[this.stack.length - 1].push(node);\r\n                this.stack.push(node.children);\r\n                node.decorators = this.getDecorators(item.hooks);\r\n                if (item.children) {\r\n                    this.TraverseContent([item.children]);\r\n                    this.stack.pop();\r\n                }\r\n                return;\r\n            }\r\n            if (item['$type'] === \"$$.Selector\") {\r\n                node = rootASTNodesBuilder_1.ASTNodeFactories.SELECTOR();\r\n                this.handleChildren(node, item);\r\n                node.decorators = this.getDecorators(item.hooks);\r\n                return;\r\n            }\r\n            if (item['$type'] === \"$$.Sequence\") {\r\n                node = rootASTNodesBuilder_1.ASTNodeFactories.SEQUENCE();\r\n                this.handleChildren(node, item);\r\n                node.decorators = this.getDecorators(item.hooks);\r\n                return;\r\n            }\r\n            if (item['$type'] === \"$$.Repeat\") {\r\n                node = rootASTNodesBuilder_1.ASTNodeFactories.REPEAT();\r\n                node.iterations = item[`$data.times`];\r\n                this.handleChildren(node, item);\r\n                node.decorators = this.getDecorators(item.hooks);\r\n                return;\r\n            }\r\n            if (item['$type'] === \"$$.Lotto\") {\r\n                node = rootASTNodesBuilder_1.ASTNodeFactories.LOTTO();\r\n                node.props = { tickets: item[`$data.tickets`].split(\",\") };\r\n                this.handleChildren(node, item);\r\n                node.decorators = this.getDecorators(item.hooks);\r\n                return;\r\n            }\r\n            if (item['$type'] === \"$$.Flip\") {\r\n                node = rootASTNodesBuilder_1.ASTNodeFactories.FLIP();\r\n                this.handleChildren(node, item);\r\n                node.decorators = this.getDecorators(item.hooks);\r\n                return;\r\n            }\r\n            if (item['$type'] === \"$$.Parallel\") {\r\n                node = rootASTNodesBuilder_1.ASTNodeFactories.PARALLEL();\r\n                this.handleChildren(node, item);\r\n                node.decorators = this.getDecorators(item.hooks);\r\n                return;\r\n            }\r\n            if (item['$type'].indexOf('$$.Actions') > -1) {\r\n                node = rootASTNodesBuilder_1.ASTNodeFactories.ACTION();\r\n                this.stack[this.stack.length - 1].push(node);\r\n                node.actionName = item['$type'];\r\n                let { $type } = item, theRest = __rest(item, [\"$type\"]);\r\n                node.props = theRest;\r\n                node.decorators = this.getDecorators(item.hooks);\r\n            }\r\n            if (item['$type'].indexOf('$$.Condition') > -1) {\r\n                node = rootASTNodesBuilder_1.ASTNodeFactories.CONDITION();\r\n                this.stack[this.stack.length - 1].push(node);\r\n                node.conditionFunction = item['$condition'];\r\n                node.decorators = this.getDecorators(item.hooks);\r\n            }\r\n            if (item['$type'].indexOf('$$.Wait') > -1) {\r\n                node = rootASTNodesBuilder_1.ASTNodeFactories.WAIT();\r\n                this.stack[this.stack.length - 1].push(node);\r\n                node.duration = item[`$data.duration`];\r\n                node.decorators = this.getDecorators(item.hooks);\r\n            }\r\n        });\r\n        return this.stack[0];\r\n    }\r\n    handleChildren(node, item) {\r\n        this.stack[this.stack.length - 1].push(node);\r\n        if (typeof item.children === 'object' && Array.isArray(item.children) === false) {\r\n            item.children = [item.children];\r\n        }\r\n        this.stack.push(node.children);\r\n        if (item.children && item.children.length > 0) {\r\n            this.TraverseContent(item.children);\r\n            this.stack.pop();\r\n        }\r\n    }\r\n    getDecorators(hooks) {\r\n        let decorators = [];\r\n        hooks && hooks.forEach(hook => {\r\n            let decorator;\r\n            switch (hook.$type) {\r\n                case \"$$.Hooks.Until\":\r\n                    decorator = rootASTNodesBuilder_1.DecoratorFactories.UNTIL(hook.$condition);\r\n                    decorators.push(decorator);\r\n                    break;\r\n                case \"$$.Hooks.While\":\r\n                    decorator = rootASTNodesBuilder_1.DecoratorFactories.WHILE(hook.$condition);\r\n                    decorators.push(decorator);\r\n                    break;\r\n                case \"$$.Hooks.Entry\":\r\n                    var _a = hook.action, { $type } = _a, theRest = __rest(_a, [\"$type\"]);\r\n                    decorator = rootASTNodesBuilder_1.DecoratorFactories.ENTRY($type, theRest);\r\n                    decorators.push(decorator);\r\n                    break;\r\n                case \"$$.Hooks.Step\":\r\n                    var _b = hook.action, { $type } = _b, theRest = __rest(_b, [\"$type\"]);\r\n                    decorator = rootASTNodesBuilder_1.DecoratorFactories.STEP($type, theRest);\r\n                    decorators.push(decorator);\r\n                    break;\r\n                case \"$$.Hooks.Exit\":\r\n                    var _c = hook.action, { $type } = _c, theRest = __rest(_c, [\"$type\"]);\r\n                    decorator = rootASTNodesBuilder_1.DecoratorFactories.EXIT($type, theRest);\r\n                    decorators.push(decorator);\r\n                    break;\r\n            }\r\n        });\r\n        return decorators;\r\n    }\r\n}\r\nexports.RootNodesBuilder = RootNodesBuilder;\r\n\n\n//# sourceURL=webpack://TypedBTree/./src/rootNodesBuilder.ts?");

/***/ }),

/***/ "./src/schemas.ts":
/*!************************!*\
  !*** ./src/schemas.ts ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.baseItemAliases = exports.rootAlias = exports.schemas = void 0;\r\nconst entry_1 = __importDefault(__webpack_require__(/*! ./decorators/entry */ \"./src/decorators/entry.ts\"));\r\nconst exit_1 = __importDefault(__webpack_require__(/*! ./decorators/exit */ \"./src/decorators/exit.ts\"));\r\nconst step_1 = __importDefault(__webpack_require__(/*! ./decorators/step */ \"./src/decorators/step.ts\"));\r\nconst while_1 = __importDefault(__webpack_require__(/*! ./decorators/guards/while */ \"./src/decorators/guards/while.ts\"));\r\nconst until_1 = __importDefault(__webpack_require__(/*! ./decorators/guards/until */ \"./src/decorators/guards/until.ts\"));\r\nconst lotto_1 = __importDefault(__webpack_require__(/*! ./nodes/lotto */ \"./src/nodes/lotto.ts\"));\r\nconst condition_1 = __importDefault(__webpack_require__(/*! ./nodes/condition */ \"./src/nodes/condition.ts\"));\r\nconst flip_1 = __importDefault(__webpack_require__(/*! ./nodes/flip */ \"./src/nodes/flip.ts\"));\r\nconst parallel_1 = __importDefault(__webpack_require__(/*! ./nodes/parallel */ \"./src/nodes/parallel.ts\"));\r\nconst repeat_1 = __importDefault(__webpack_require__(/*! ./nodes/repeat */ \"./src/nodes/repeat.ts\"));\r\nconst root_1 = __importDefault(__webpack_require__(/*! ./nodes/root */ \"./src/nodes/root.ts\"));\r\nconst selector_1 = __importDefault(__webpack_require__(/*! ./nodes/selector */ \"./src/nodes/selector.ts\"));\r\nconst sequence_1 = __importDefault(__webpack_require__(/*! ./nodes/sequence */ \"./src/nodes/sequence.ts\"));\r\nconst wait_1 = __importDefault(__webpack_require__(/*! ./nodes/wait */ \"./src/nodes/wait.ts\"));\r\nexports.schemas = {\r\n    \"lotto\": lotto_1.default.schema,\r\n    \"condition\": condition_1.default.schema,\r\n    \"flip\": flip_1.default.schema,\r\n    \"parallel\": parallel_1.default.schema,\r\n    \"repeat\": repeat_1.default.schema,\r\n    \"root\": root_1.default.schema,\r\n    \"selector\": selector_1.default.schema,\r\n    \"sequence\": sequence_1.default.schema,\r\n    \"wait\": wait_1.default.schema,\r\n    \"entry\": entry_1.default.schema,\r\n    \"exit\": exit_1.default.schema,\r\n    \"step\": step_1.default.schema,\r\n    \"while\": while_1.default.schema,\r\n    \"until\": until_1.default.schema\r\n};\r\nexports.rootAlias = { \"rootAlias\": \"$$.Root\" };\r\nexports.baseItemAliases = [\r\n    {\r\n        \"identifier\": \"$$.Root\",\r\n        \"values\": [\r\n            \"$$.Root\"\r\n        ]\r\n    },\r\n    {\r\n        \"identifier\": \"$$.Item\",\r\n        \"values\": [\r\n            \"$$.Selector\",\r\n            \"$$.Sequence\",\r\n            \"$$.Parallel\",\r\n            \"$$.Wait\",\r\n            \"$$.Flip\",\r\n            \"$$.Lotto\",\r\n            \"$$.Condition\",\r\n            \"$$.Repeat\"\r\n        ]\r\n    },\r\n    {\r\n        \"identifier\": \"$$.Action\",\r\n        \"values\": []\r\n    },\r\n    {\r\n        \"identifier\": \"$$.Hook\",\r\n        \"values\": [\r\n            \"$$.Hooks.Entry\",\r\n            \"$$.Hooks.Exit\",\r\n            \"$$.Hooks.Step\",\r\n            \"$$.Hooks.While\",\r\n            \"$$.Hooks.Until\"\r\n        ]\r\n    }\r\n];\r\n\n\n//# sourceURL=webpack://TypedBTree/./src/schemas.ts?");

/***/ }),

/***/ "./src/state.ts":
/*!**********************!*\
  !*** ./src/state.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.State = void 0;\r\nexports.State = {\r\n    READY: Symbol(\"typedBTree.ready\"),\r\n    RUNNING: Symbol(\"typedBTree.running\"),\r\n    SUCCEEDED: Symbol(\"typedBTree.succeeded\"),\r\n    FAILED: Symbol(\"typedBTree.failed\")\r\n};\r\n\n\n//# sourceURL=webpack://TypedBTree/./src/state.ts?");

/***/ })

/******/ });